---
- hosts: all
  become: yes
  vars:
    mysql_root_pswd: "1234"

  tasks:
    - name: Enable EPEL Repository on CentOS 7
      yum:
        name: epel-release
        state: latest
      become: true
      when: ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_major_version'] == '7'

    - name: Enable IUS Repository on CentOS 7
      yum:
        name: https://repo.ius.io/ius-release-el7.rpm
        state: present
      become: true
      when: ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_major_version'] == '7'

    - name: Enable MariaDB repository on CentOS
      copy:
        src: Mariadb.repo.centos
        dest: /etc/yum.repos.d/Mariadb.repo
        mode: '0644'
      when: ansible_facts['distribution'] == "CentOS"
    
    - name: Enable MariaDB repository on RHEL
      copy:
        src: Mariadb.repo.redhat
        dest: /etc/yum.repos.d/Mariadb.repo
        mode: '0644'
      when: ansible_facts['distribution'] == "Red Hat Enterprise Linux"

    - name: Installing AMP stack and dependencies
      yum:
        name: 
          - "@Development Tools"
          - make 
          - libmcrypt 
          - libmcrypt-devel 
          - libssh2 
          - libssh2-devel 
          - libmemcached-devel
          - zip
          - unzip
          - wget
          - curl
          - vim
          - python-PyMySQL
          - poppler-utils
          - urw-fonts
          - libreoffice-headless
          - httpd
          - MariaDB-server 
          - MariaDB-client
          - mod_php74
          - php74-cli 
          - php74-ldap 
          - php74-bcmath 
          - php74-devel 
          - php74-mysqlnd 
          - php74-pdo 
          - php74-mbstring
          - php74-soap 
          - php74-gd 
          - php74-xml 
          - php74-imap 
          - php74-json 
          - php74-gmp 
          - php74-pecl-apcu 
          - php74-pecl-igbinary 
          - php74-pecl-zip
          - pear1.noarch
        state: present

    - name: Installing mcrypt module
      pear:
        name: pecl/mcrypt
        state: latest

    - name: Installing ssh2 module
      pear:
        name: pecl/ssh2-1.2
        state: latest

    - name: Installing memcached module
      pear:
        name: pecl/memcached-3.1.5
        state: latest

    - name: Configure php.ini
      lineinfile:
        dest: "/etc/php.ini"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"    
        state: present
      with_items:
        - { regexp: "^extension=ssh2.so", line: "extension=ssh2.so" }
        - { regexp: "^extension=mcrypt.so", line: "extension=mcrypt.so" }
        - { regexp: "^extension=memcached.so", line: "extension=memcached.so" }
        - { regexp: "^short_open_tag", line: "short_open_tag = Off" }
        - { regexp: "^error_reporting", line: "error_reporting = E_ALL & ~E_DEPRECATED &~E_STRICT & ~E_NOTICE" }
        - { regexp: "^memory_limit", line: "memory_limit = 2048M" }
        - { regexp: "^max_execution_time", line: "max_execution_time = 300" }
        - { regexp: "^max_input_vars", line: "max_input_vars = 1500" }
        - { regexp: "^expose_php", line: "expose_php = Off" }
        - { regexp: "^enable_dl", line: "enable_dl = Off" }
        - { regexp: "^allow_url_fopen", line: "allow_url_fopen = Off" }
        - { regexp: "^allow_url_include", line: "allow_url_include = Off" }
        - { regexp: "^display_errors", line: "display_errors = Off" }
        - { regexp: "^post_max_size", line: "post_max_size = 50M" }
        - { regexp: "^upload_tmp_dir", line: "upload_tmp_dir = /tmp" }
        - { regexp: "^upload_max_filesize", line: "upload_max_filesize = 50M" }
        - { regexp: "^precision", line: "precision = 14" }

    - name: Determine PHP extension directory
      shell: "php -i | grep -o -m 1 'extension_dir .* =' | sed -r 's/extension_dir => //g' | sed -r 's/ =//g'"
      register: php_extension_dir
      failed_when: "php_extension_dir.stdout == 'xx'"
      ignore_errors: true

    - name: Set facts
      set_fact: >
        php_extension_dir="{{ php_extension_dir.stdout }}"
        ioncube_tarfile="ioncube_loaders.tar.gz"

    - name: Download ioncube loader
      get_url: >
        url=https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz
        dest=/tmp/{{ ioncube_tarfile }}
      when: ansible_machine == 'x86_64'

    - name: Extract ioncube loader
      unarchive:
        src: "/tmp/{{ ioncube_tarfile }}"
        dest: "/tmp"
        copy: no

    - name: Install ioncube loader
      command: cp "/tmp/ioncube/ioncube_loader_lin_7.4.so" "{{ php_extension_dir }}/ioncube_loader_lin_7.4.so"

    - name: Configuring php.ini - ioncube loader 
      lineinfile:
        dest: "/etc/php.ini"
        regexp: "^zend_extension"
        line: "zend_extension={{ php_extension_dir }}/ioncube_loader_lin_7.4.so"
        state: present

    - name: Starting apache
      service: 
        name: httpd
        state: started
        enabled: yes

    - name: Starting mariadb
      service: 
        name: mariadb
        state: started
        enabled: yes

    - name: Copying mariadb server.cnf file
      copy:
        src: server.cnf
        dest: /etc/my.cnf.d/
        mode: '0644'

    - name: Setting mariadb root password
      mysql_user:
        check_implicit_admin: true
        login_user: root
        login_password: "{{ mysql_root_pswd }}"
        user: root
        password: "{{ mysql_root_pswd }}"
        host: localhost

    - name: Removing remote mariadb root
      mysql_user:
        check_implicit_admin: true
        login_user: root
        login_password: "{{ mysql_root_pswd }}"
        user: root
        password: "{{ mysql_root_pswd }}"
        host: "{{ ansible_fqdn }}"
        state: absent

    - name: Removing remote mariadb root %
      mysql_user:
        check_implicit_admin: true
        login_user: root
        login_password: "{{ mysql_root_pswd }}"
        user: root
        password: "{{ mysql_root_pswd }}"
        host: "%"
        state: absent

    - name: Restarting mariadb
      service: 
        name: mariadb
        state: restarted
        enabled: yes

    - name: Restarting apache
      service: 
        name: mariadb
        state: restarted
        enabled: yes
    
    - name: Adding ERLANG repos
      shell: curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | bash
      
    - name: Adding RabbitMQ repos
      shell: curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | bash
      
    - name: Installing ERLANG and RabbitMQ
      yum:
        name:
          - erlang-23.1.1
          - rabbitmq-server-3.8.4
        state: present
        
    - name: Starting RabbitMQ
      service: 
        name: rabbitmq-server
        state: started
        enabled: yes
        
    - name: Enabling RabbitMQ management plugin
      shell: rabbitmq-plugins enable rabbitmq_management
        
    - name: Copying RabbitMQ conf file
      copy:
        src: rabbitmq.conf
        dest: /etc/rabbitmq/
        mode: '0644'
        
    - name: Restarting RabbitMQ
      service: 
        name: rabbitmq-server
        state: restarted
        enabled: yes
        
    - name: Downloading WKHTML
      get_url: >
        url=https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox-0.12.6-1.centos7.x86_64.rpm
        dest=/tmp/wkhtmltox-0.12.6-1.centos7.x86_64.rpm
      
    - name: Installing WKHTML package.
      yum:
         name: /tmp/wkhtmltox-0.12.6-1.centos7.x86_64.rpm
         state: present
